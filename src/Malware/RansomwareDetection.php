<?php

namespace Datto\Malware;

use Datto\Malware\RansomwareRules\HighlyRandomUnidentifiableMimetype;
use Datto\Malware\RansomwareRules\KnownRansomwareExtensions;
use PDO;

/**
 * Responsible for instantiating and running the RansomwareRules' detection
 * @author Matthew Cheman <mcheman@datto.com>
 */
class RansomwareDetection
{
    /** @var PDO */
    private $pdo;

    /** @var RansomwareRule[] */
    private $rules;

    /**
     * @param PDO|null $pdo The database that contains the data necessary to determine whether ransomware is present
     * @param RansomwareRule[] $rules Optional, an array of RansomwareRules used to perform detection
     */
    public function __construct(
        PDO $pdo = null,
        array $rules = null
    ) {
        $this->pdo = $pdo ?: new PDO('sqlite::memory:');

        $this->rules = $rules ?: [
            new KnownRansomwareExtensions($pdo),
            new HighlyRandomUnidentifiableMimetype($pdo)
        ];
    }

    /**
     * Runs all the RansomwareRules against the database to check whether it indicates the filesystem has ransomware
     *
     * @return array Contains keys 'hasRansomware' for overall assessment and 'rules' for the rule objects
     */
    public function detect(): array
    {
        $result = ['hasRansomware' => false];

        foreach ($this->rules as $rule) {
            if ($rule->detect()) {
                $result['hasRansomware'] = true;
            }
            $result['rules'][] = $rule;
        }

        return $result;
    }
}
