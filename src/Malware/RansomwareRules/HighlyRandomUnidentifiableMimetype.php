<?php

namespace Datto\Malware\RansomwareRules;

use Datto\Malware\RansomwareConfiguration;
use Datto\Malware\RansomwareRule;
use \PDO;

/**
 * Ransomware rule
 * @author Chuck Roydhouse <cer@datto.com>
 */
class HighlyRandomUnidentifiableMimetype extends RansomwareRule
{
    /** Rule description */
    const DESCRIPTION = 'Detects file entries that contain a known extension, unidentifiable mimetype, and are highly random';

    /** Default positive occurrence threshold (threshold = (occurrence / total)) */
    const DEFAULT_OCCURRENCE_THRESHOLD = 0.05;

    /** Default minimum number of samples to pass judgement */
    const DEFAULT_MINIMUM_SAMPLES = RansomwareConfiguration::DEFAULT_MINIMUM_SAMPLES;

    /** Default maximum number of samples to pass judgement */
    const DEFAULT_MAXIMUM_OCCURRENCES = PHP_INT_MAX; // We just want to ignore this for now

    /**
     * FIXME:
     * Right now, ransomware will test positive if you have any 10 or more files that pass the random mimetype check,
     * or if the total number of files is greater than half a percent.
     *
     * This was letting through too many false positives, many companies elect to encrypt some of their data themselves.
     * Overall, it appears to be either quite a lot of data (over 10%) or a very small amount (under 1%).
     * Often, this under 1% group was well over 10 files, so we want to ignore that.
     *
     * The actual infected systems range from having .0001% of files infected to over 15% infected.
     * We can't claim know how all ransomware works so we may end up ignoring some actual infected systems at the start.
     * If your system is truly infected with ransomware, eventually you will cross a 5% infected threshold so we will alert.
     * The warning may just come later than desired, which is the best we can do for this hotfix.
     */

    /**
     * @param PDO $pdo
     * @param string $name
     * @param string $description
     * @param float $threshold
     * @param int $minimumSamples
     * @param int $maximumOccurrences
     */
    public function __construct(
        PDO $pdo,
        string $name = self::class,
        string $description = self::DESCRIPTION,
        float $threshold = self::DEFAULT_OCCURRENCE_THRESHOLD,
        int $minimumSamples = self::DEFAULT_MINIMUM_SAMPLES,
        int $maximumOccurrences = self::DEFAULT_MAXIMUM_OCCURRENCES
    ) {
        parent::__construct($pdo, $name, $description, $threshold, $minimumSamples, $maximumOccurrences);
    }

    /**
     * @return int
     */
    protected function getTotalOccurrences(): int
    {
        $knownExtensions = RansomwareConfiguration::getKnownExtensionString();
        $excludedExtensions = RansomwareConfiguration::getExcludedExtensionString();

        $sql = "SELECT COUNT(*)
                FROM entries
                WHERE lower(detected_extension) IN ($knownExtensions) AND
                    lower(extension) NOT IN ($excludedExtensions)";

        $statement = $this->pdo->prepare($sql);
        $statement->execute();

        $result = $statement->fetchColumn();
        return (int) $result;
    }

    /**
     * @return int
     */
    protected function getDetectedOccurrences(): int
    {
        $knownExtensions = RansomwareConfiguration::getKnownExtensionString();
        $excludedExtensions = RansomwareConfiguration::getExcludedExtensionString();

        $sql = "SELECT COUNT(*)
                FROM entries
                WHERE lower(detected_extension) IN ($knownExtensions) AND
                    lower(extension) NOT IN ($excludedExtensions) AND
                    mimetype = :unknownMimetype AND
                    chi_square_percentage >= :chi_square_percentage AND
                    density >= :density";


        $statement = $this->pdo->prepare($sql);
        $statement->execute([
            ':unknownMimetype' => RansomwareConfiguration::UNIDENTIFIABLE_MIMETYPE,
            ':chi_square_percentage' => RansomwareConfiguration::CHI_SQUARED_THRESHOLD,
            ':density' => RansomwareConfiguration::DENSITY_THRESHOLD
        ]);

        $result = $statement->fetchColumn();
        return (int) $result;
    }

    /**
     * @return array
     */
    protected function getDetectedOccurrencesFileList(): array
    {
        $knownExtensions = RansomwareConfiguration::getKnownExtensionString();
        $excludedExtensions = RansomwareConfiguration::getExcludedExtensionString();

        $sql = "SELECT path, filename
                FROM entries
                WHERE lower(detected_extension) IN ($knownExtensions) AND
                    lower(extension) NOT IN ($excludedExtensions) AND
                    mimetype = :unknownMimetype AND
                    chi_square_percentage >= :chi_square_percentage AND
                    density >= :density
                LIMIT 100";

        $statement = $this->pdo->prepare($sql);
        $statement->execute([
                ':unknownMimetype' => RansomwareConfiguration::UNIDENTIFIABLE_MIMETYPE,
                ':chi_square_percentage' => RansomwareConfiguration::CHI_SQUARED_THRESHOLD,
                ':density' => RansomwareConfiguration::DENSITY_THRESHOLD
        ]);

        $result = [];
        while ($row = $statement->fetch(PDO::FETCH_ASSOC, PDO::FETCH_ORI_NEXT)) {
            array_push($result, $row['path'] . $row['filename']);
        }

        return $result;
    }
}
